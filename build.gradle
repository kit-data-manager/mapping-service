plugins {
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.springframework.boot' version '2.6.6'
    id "org.asciidoctor.jvm.convert" version "4.0.3"
    id "org.owasp.dependencycheck" version "11.1.0"
    id 'net.researchgate.release' version '3.0.2'
    id "com.gorylenko.gradle-git-properties" version "2.4.2"
    id 'java'
    id 'jacoco'
}

description = 'Generic mapping service supporting different mapping implementations.'
group = 'edu.kit.datamanager'

println "Running gradle version: $gradle.gradleVersion"
println "Building ${name} version: ${version}"
println "JDK version: ${JavaVersion.current()}"


configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceCompatibility = 1.17
targetCompatibility = 1.17

if (project.hasProperty('release')) {
    println 'Using \'release\' profile for building ' + project.getName()
    apply from: 'gradle/profile-deploy.gradle'
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('snippetsDir', file('build/generated-snippets'))
    applicationProperties = System.getProperty('applicationProperties', './src/test/resources/test-config/application-test.properties')
    pythonExecutable = System.getProperty('pythonExecutable', 'file:///usr/bin/python3')
    userDir = System.getProperty('user.dir')
}

dependencies {
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.10.0.202406032230-r'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.18'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.18'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.18'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.18'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.5'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.11'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.8.0'
    implementation 'org.javers:javers-spring-boot-starter-sql:6.6.5'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.json:json:20220320'
    implementation 'com.github.jknack:handlebars:4.4.0'
    implementation 'com.google.guava:guava:33.3.1-jre'
    implementation 'commons-io:commons-io:2.17.0'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'edu.kit.datamanager:service-base:1.0.4'
    // apache
    implementation "org.apache.tika:tika-core:2.9.2"

    testImplementation platform('org.junit:junit-bom:5.11.3')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-migrationsupport:5.11.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.18'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.8.RELEASE'
    testImplementation 'org.springframework.security:spring-security-test:5.7.3'
    testImplementation 'org.springframework:spring-test:5.3.39'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'net.bytebuddy:byte-buddy:1.15.10'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.11.3'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.7.18'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    compileOnly 'org.projectlombok:lombok:1.18.36'

    runtimeOnly 'com.h2database:h2:2.3.232'
    runtimeOnly 'org.postgresql:postgresql:42.7.4'
    runtimeOnly 'org.apache.httpcomponents:httpclient:4.5.14'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.2'
}

test {
    outputs.dir snippetsDir
    finalizedBy jacocoTestReport
    println("Running tests with configuration: ${applicationProperties}")
    println("Running tests with python: ${pythonExecutable}")
    println("Running tests in directory: ${userDir}")
    environment 'spring.config.location', applicationProperties
    environment 'pythonExecutable', pythonExecutable
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport{
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

jar {
    manifest {
        attributes 'Main-Class': 'edu.kit.datamanager.mapping-service.MappingServiceApplication'
    }
    archiveBaseName = 'mapping-service'
    // version is defined in file 'gradle.properties'
    archiveVersion = System.getenv('version')
    // disable plain jar file
    enabled = false
}

springBoot {    
    buildInfo()
}

bootRun {
    systemProperty "spring.config.location", "file:$projectDir/"
    systemProperty "pythonLocation", pythonExecutable
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    launchScript()
}

release {
    tagTemplate = 'v${version}'
}

task buildPluginJar(type: Jar) {
 description = 'Bundeling only plugin classes'
 archiveFileName.set("default-plugins-${version}.jar")
 from sourceSets.main.output
 include '**/plugins/impl/*.class'
}

// task for printing project name.
// should be the last task inside file
task printProjectName {
    doLast {
        println "${project.name}"
    }
}
